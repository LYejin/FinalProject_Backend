<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.EmployeeDao">

    <select id="userSelect" resultType="com.example.demo.dto.UserDTO">
        SELECT *
        FROM Employee_Roll
        WHERE
            USERNAME = #{username}
    </select>

    <!-- EmployeeSearchList   -->
    <select id="employeeSearchList" parameterType="hashmap" resultType="com.example.demo.dto.EmployeeDTO">
        SELECT
            e.EMP_CD
            ,e.CO_CD
            ,e.DIV_CD
            ,e.DEPT_CD
            ,e.USER_YN
            ,e.USE_FG
            ,e.USERNAME
            ,e.PASSWORD
            ,e.KOR_NM
            ,e.EMAIL_ADD
            ,e.TEL
            ,e.GENDER_FG
            ,e.JOIN_DT
            ,e.RTR_DT
            ,e.RSRG_ADD
            ,e.PIC_FILE_ID
            ,e.ENRL_FG
            ,e.PERSONAL_MAIL
            ,e.PERSONAL_MAIL_CP
            ,e.SALARY_MAIL
            ,e.SALARY_MAIL_CP
            ,e.HOME_TEL
            ,e.ZIPCODE
            ,e.ADDR
            ,e.ADDR_NUM
            ,er.ROLE_NAME
            ,w.DIV_NM
            ,d.DEPT_NM
        FROM Employee e
        LEFT OUTER JOIN Employee_Roll er
            on e.EMP_CD = er.EMP_CD
        LEFT OUTER JOIN Workplace w
            on e.CO_CD = w.CO_CD
          AND e.DIV_CD = w.DIV_CD
        LEFT OUTER JOIN Department d
            on e.CO_CD = d.CO_CD
          AND e.DIV_CD = d.DIV_CD
          AND e.DEPT_CD = d.DEPT_CD
        <where>
            <choose>
                <when test="ENRL_FG != null and ENRL_FG.length > 0">
                    e.USER_YN IN (0,1)
                </when>
                <otherwise>
                    e.USER_YN='1'
                </otherwise>
            </choose>
            <if test="CO_CD != null and !CO_CD.equals('')">
                AND e.CO_CD = #{CO_CD}
            </if>
            <if test="ENRL_FG != null and ENRL_FG.length > 0">
                AND (
                <foreach collection="ENRL_FG" item="enrlFg" separator="OR">
                    e.ENRL_FG = #{enrlFg}
                </foreach>
                )
            </if>
            <if test="NAME != null and !NAME.equals('')">
                AND (e.USERNAME LIKE CONCAT('%', #{NAME}, '%')
                OR e.KOR_NM LIKE CONCAT('%', #{NAME}, '%')
                OR e.EMAIL_ADD LIKE CONCAT('%', #{NAME}, '%'))
            </if>
            AND er.ROLE_NAME != 'ROLE_ADMIN'
        </where>
    </select>

    <!--사업장 전체목록 가져오기-->
    <select id="selectWorkplaceSearch" resultType="com.example.demo.dto.WorkplaceDTO">
        SELECT
            DIV_CD
            ,CO_CD
            ,DIV_NM
        FROM Workplace
        WHERE
            CO_CD = #{CO_CD}
    </select>


    <!-- SelectBox 내 companyList   -->
    <select id="companySearchList" parameterType="com.example.demo.dto.CompanyDTO" resultType="com.example.demo.dto.CompanyDTO">
        SELECT
            CO_CD
            ,USE_YN
            ,CO_NM
        FROM Company
        WHERE
            USE_YN = 1
    </select>

    <!-- 사원 상세 테이터 1건 출력 -->
    <select id="employeeDetail" parameterType="com.example.demo.dto.EmployeeDTO" resultType="com.example.demo.dto.EmployeeDTO">
        SELECT
            e.EMP_CD
            ,e.CO_CD
            ,e.DIV_CD
            ,e.DEPT_CD
            ,e.USER_YN
            ,e.USE_FG
            ,e.USERNAME
            ,e.PASSWORD
            ,e.KOR_NM
            ,e.EMAIL_ADD
            ,e.TEL
            ,e.GENDER_FG
            ,e.JOIN_DT
            ,e.RTR_DT
            ,e.RSRG_ADD
            ,e.PIC_FILE_ID
            ,e.ENRL_FG
            ,e.PERSONAL_MAIL
            ,e.PERSONAL_MAIL_CP
            ,e.SALARY_MAIL
            ,e.SALARY_MAIL_CP
            ,e.HOME_TEL
            ,e.ZIPCODE
            ,e.ADDR
            ,e.ADDR_NUM
            ,w.DIV_NM
            ,d.DEPT_NM
        FROM Employee e
        LEFT OUTER JOIN Workplace w
            on e.CO_CD = w.CO_CD
          AND e.DIV_CD = w.DIV_CD
        LEFT OUTER JOIN Department d
            on e.CO_CD = d.CO_CD
          AND e.DIV_CD = d.DIV_CD
          AND e.DEPT_CD = d.DEPT_CD
        WHERE
            USERNAME = #{USERNAME}
    </select>

    <!-- 사업장별 사번 유효성 검사 -->
    <select id="employeeEmpCDInWorkplace" parameterType="hashmap" resultType="String">
        SELECT
            EMP_CD
        FROM Employee
        WHERE
            CO_CD = #{CO_CD}
          AND EMP_CD=#{EMP_CD}
    </select>

    <!-- 로그인ID 회사 전체 내 유효성 검사 -->
    <select id="employeeUsernameInCompany" resultType="String">
        SELECT
            USERNAME
        FROM Employee
        WHERE
            USERNAME=#{USERNAME}
    </select>

    <!-- 메일ID 회사 전체 내 유효성 검사 -->
    <select id="employeeEmailInCompany" resultType="String">
        SELECT
            EMAIL_ADD
        FROM Employee
        WHERE
            EMAIL_ADD=#{EMAIL_ADD}
    </select>

    <!-- 신규 사원 데이터 1건 입력 -->
    <insert id="employeeInsert" parameterType="com.example.demo.dto.EmployeeDTO" statementType="CALLABLE">
    { CALL InsertEmployeeRollProcedure(
            #{EMP_CD}
            ,#{CO_CD}
            ,#{DIV_CD}
            ,#{DEPT_CD}
            ,'1'
            ,'1'
            ,#{USERNAME}
            ,#{PASSWORD}
            ,#{KOR_NM}
            ,#{EMAIL_ADD}
            ,#{TEL}
            ,#{GENDER_FG}
            ,#{JOIN_DT}
            ,''
            ,#{PIC_FILE_ID}
            ,#{ENRL_FG}
            ,#{PERSONAL_MAIL}
            ,#{PERSONAL_MAIL_CP}
            ,#{SALARY_MAIL}
            ,#{SALARY_MAIL_CP}
            ,#{HOME_TEL}
            ,#{ZIPCODE}
            ,#{ADDR}
            ,#{ADDR_NUM}
            ,#{ROLE_NAME}
        ) }
    </insert>

    <!-- 특정 사원 데이터 비 활성화 -->
    <update id="employeeRemove" parameterType="com.example.demo.dto.EmployeeDTO">
        UPDATE
            Employee
        SET
            USER_YN = '0'
            ,USE_FG = '0'
            ,ENRL_FG = '2'
        WHERE
            USERNAME = #{USERNAME}
    </update>

    <!-- 특정 사원 데이터 정보 갱신 -->
    <update id="employeeUpdate" parameterType="com.example.demo.dto.EmployeeDTO">
        UPDATE
            Employee
        <set>
            <if test="DEPT_CD != null and !DEPT_CD.equals('')">
                DEPT_CD = #{DEPT_CD},
            </if>
            <if test="DIV_CD != null and !DIV_CD.equals('')">
                DIV_CD = #{DIV_CD},
            </if>
            <if test="USE_FG != null and !USE_FG.equals('')">
                USE_FG = #{USE_FG},
            </if>
            <if test="USER_YN != null and !USER_YN.equals('')">
                USER_YN = #{USER_YN},
            </if>
            <if test="PASSWORD != null and !PASSWORD.equals('')">
                PASSWORD = #{PASSWORD},
            </if>
            <if test="KOR_NM != null and !KOR_NM.equals('')">
                KOR_NM = #{KOR_NM},
            </if>
            <if test="TEL != null and !TEL.equals('')">
                TEL = #{TEL},
            </if>
            <if test="GENDER_FG != null and !GENDER_FG.equals('')">
                GENDER_FG = #{GENDER_FG},
            </if>
            <if test="JOIN_DT != null and !JOIN_DT.equals('')">
                JOIN_DT = #{JOIN_DT},
            </if>
            <if test="RTR_DT != null and !RTR_DT.equals('')">
                RTR_DT = #{RTR_DT},
            </if>
            <if test="RSRG_ADD != null and !RSRG_ADD.equals('')">
                RSRG_ADD = #{RSRG_ADD},
            </if>
            <if test="PIC_FILE_ID != null and !PIC_FILE_ID.equals('')">
                PIC_FILE_ID = #{PIC_FILE_ID},
            </if>
            <if test="ENRL_FG != null and !ENRL_FG.equals('')">
                ENRL_FG = #{ENRL_FG, jdbcType=NUMERIC},
            </if>
            <if test="PERSONAL_MAIL != null and !PERSONAL_MAIL.equals('')">
                PERSONAL_MAIL = #{PERSONAL_MAIL},
            </if>
            <if test="PERSONAL_MAIL_CP != null and !PERSONAL_MAIL_CP.equals('')">
                PERSONAL_MAIL_CP = #{PERSONAL_MAIL_CP},
            </if>
            <if test="SALARY_MAIL != null and !SALARY_MAIL.equals('')">
                SALARY_MAIL = #{SALARY_MAIL},
            </if>
            <if test="SALARY_MAIL_CP != null and !SALARY_MAIL_CP.equals('')">
                SALARY_MAIL_CP = #{SALARY_MAIL_CP},
            </if>
            <if test="HOME_TEL != null and !HOME_TEL.equals('')">
                HOME_TEL = #{HOME_TEL},
            </if>
            <if test="ZIPCODE != null and !ZIPCODE.equals('')">
                ZIPCODE = #{ZIPCODE},
            </if>
            <if test="ADDR != null and !ADDR.equals('')">
                ADDR = #{ADDR},
            </if>
            <if test="ADDR_NUM != null and !ADDR_NUM.equals('')">
                ADDR_NUM = #{ADDR_NUM},
            </if>
        </set>
        WHERE
            USERNAME = #{USERNAME}
    </update>


    <!-- 비밀번호 업데이트 시 권한 정보 갱신 -->
    <update id="employeeRollUpdate" parameterType="com.example.demo.dto.EmployeeDTO">
        UPDATE
            Employee_Roll
        set
            PASSWORD=#{PASSWORD}
        WHERE
            USERNAME = #{USERNAME}
    </update>

    <select id="loginUserInfo" parameterType="com.example.demo.dto.EmployeeDTO" resultType="com.example.demo.dto.LoginUserInfoDTO">
        SELECT
            e.KOR_NM,
            e.PIC_FILE_ID,
            c.CO_NM,
            d.DEPT_NM,
            er.ROLE_NAME
        FROM
            Employee e
        LEFT JOIN
            Company c ON e.CO_CD = c.CO_CD
        LEFT JOIN
            Department d ON e.DEPT_CD = d.DEPT_CD
        LEFT JOIN
            Employee_Roll er ON e.EMP_CD = er.EMP_CD
        WHERE
            e.EMP_CD = #{EMP_CD}
            AND e.CO_CD = #{CO_CD}
            AND e.DEPT_CD = #{DEPT_CD}
            AND e.DIV_CD = #{DIV_CD}
    </select>
</mapper>